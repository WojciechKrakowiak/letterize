I"m<p>A javascript front-end library for wrapping single letters into HTML nodes (i.e.
<code class="highlighter-rouge">&lt;span&gt;&lt;/span&gt;</code>). Made to make text animations easier and simplify letter by
letter animation with libraries like
<a href="https://github.com/juliangarnier/anime/">Anime.js</a>.</p>

<p>Visit
<a href="https://wojciechkrakowiak.github.io/letterize/">https://wojciechkrakowiak.github.io/letterize/</a>
and checkout some
<a href="https://wojciechkrakowiak.github.io/letterize/examples">animated examples</a>.</p>

<p>Version 2.0 is out. Moved project to typescript, added types declaration file
and added to npm repository. :smile:</p>

<p><strong>BREAKING CHANGES: majority of methods are now read-only properties</strong></p>

<h2 id="installation">Installation</h2>

<p>Install with npm or yarn</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install letterizejs --save
yarn add letterizejs
</code></pre></div></div>

<p>Download /lib/letterize.min.js file into your project and include it in your
HTML document:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"/path/to/letterize.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>or use cdn version:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/letterizejs/lib/letterize.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<h2 id="usage">Usage</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Letterize</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">letterizejs</span><span class="dl">"</span>
<span class="kd">const</span> <span class="nx">example</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Letterize</span><span class="p">({</span><span class="na">targets</span><span class="p">:</span> <span class="dl">"</span><span class="s2">.selector</span><span class="dl">"</span><span class="p">,</span> <span class="nx">options</span><span class="p">...});</span>
</code></pre></div></div>

<h2 id="options">Options</h2>

<h3 id="targets-string-required">targets: <em>(String) <strong>required</strong></em></h3>

<p>A javascript selector. All letters inside these elements will be wrappet in HTML
nodes (by default in <code class="highlighter-rouge">&lt;span&gt;&lt;/span&gt;</code>)</p>

<p><em>examples:</em></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">targets</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#sampleId</span><span class="dl">"</span><span class="p">,</span>
<span class="nx">targets</span><span class="p">:</span> <span class="dl">"</span><span class="s2">.sampleClass</span><span class="dl">"</span><span class="p">,</span>
<span class="nx">targets</span><span class="p">:</span> <span class="dl">"</span><span class="s2">h2</span><span class="dl">"</span><span class="p">,</span>
<span class="nx">targets</span><span class="p">:</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">"</span><span class="s2">h2</span><span class="dl">"</span><span class="p">),</span>
<span class="nx">targets</span><span class="p">:</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">#sampleId</span><span class="dl">"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="wrapper-string-default-span">wrapper: <em>(String) (default: “span”)</em></h3>

<p>A html tag name that we want to wrap elements into. Default value is “span”</p>

<p><em>example:</em></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">wrapper</span><span class="p">:</span> <span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">,</span>
</code></pre></div></div>

<h3 id="classname-string">className: <em>(String)</em></h3>

<p>A class name that has to be set on all letters wrapper element.</p>

<p><em>example:</em></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">className</span><span class="p">:</span> <span class="dl">"</span><span class="s2">letter</span><span class="dl">"</span><span class="p">,</span>
</code></pre></div></div>

<h2 id="methods-and-properties">Methods and properties</h2>

<p><code class="highlighter-rouge">Letterize.targets</code> [read-only] <em>(Array, NodeList, HTMLCollection, HTMLElement,
String)</em> – returns an array of targets</p>

<p><code class="highlighter-rouge">Letterize.wrapper</code> [read-only] <em>(String)</em> – returns a name of letters’ wrapper
node. (i.e. “span”)</p>

<p><code class="highlighter-rouge">Letterize.className</code> [read-only] <em>String</em> – returns a class name set on
letters’ wrappers</p>

<p><code class="highlighter-rouge">Letterize.list</code> [read-only] <em>Array</em> – returns an array of arrays. Each of inner
arrays corresponds to each target element and contains all wrapper elements with
letters. It can be used to animate letters in each target simultaneously.</p>

<p><code class="highlighter-rouge">Letterize.listAll</code> [read-only] <em>Array</em> – returns an array of all wrapper
elements with letters without any division. Usefor for animating all targets one
after another, or for other operations made on all letters.</p>

<p><code class="highlighter-rouge">Letterize.deletterize()</code> – Removes all wrapper elements created in
initialization and sets all properties to undefined.</p>

<h2 id="todos">TODOs</h2>

<ul>
  <li>Get feedback, improve, share :wink:</li>
</ul>
:ET